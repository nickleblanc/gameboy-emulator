#[derive(Debug)]
pub enum ArithmeticTarget {
    A,
    B,
    C,
    D,
    E,
    H,
    L,
    HL,
    D8,
}
#[derive(Debug)]
pub enum IncDecTarget {
    A,
    B,
    C,
    D,
    E,
    H,
    L,
    HLI,
    BC,
    DE,
    HL,
    SP,
}
#[derive(Debug)]
pub enum ADDHLTarget {
    BC,
    DE,
    HL,
    SP,
}
#[derive(Debug)]
pub enum PrefixTarget {
    A,
    B,
    C,
    D,
    E,
    H,
    L,
    HL,
}
#[derive(Debug)]
pub enum BitPosition {
    B0,
    B1,
    B2,
    B3,
    B4,
    B5,
    B6,
    B7,
}

impl std::convert::From<BitPosition> for u8 {
    fn from(position: BitPosition) -> u8 {
        match position {
            BitPosition::B0 => 0,
            BitPosition::B1 => 1,
            BitPosition::B2 => 2,
            BitPosition::B3 => 3,
            BitPosition::B4 => 4,
            BitPosition::B5 => 5,
            BitPosition::B6 => 6,
            BitPosition::B7 => 7,
        }
    }
}
#[derive(Debug)]
pub enum LoadByteTarget {
    A,
    B,
    C,
    D,
    E,
    H,
    L,
    HL,
}
#[derive(Debug)]
pub enum LoadByteSource {
    A,
    B,
    C,
    D,
    E,
    H,
    L,
    D8,
    HL,
}
#[derive(Debug)]
pub enum LoadWordTarget {
    BC,
    DE,
    HL,
    SP,
}
#[derive(Debug)]
pub enum IndirectTarget {
    BC,
    DE,
    HLI,
    HLD,
    Word,
    LastByte,
}
#[derive(Debug)]
pub enum StackTarget {
    AF,
    BC,
    DE,
    HL,
}
#[derive(Debug, PartialEq)]
pub enum JumpCondition {
    NotZero,
    Zero,
    NotCarry,
    Carry,
    Always,
}
#[derive(Debug)]
pub enum LoadType {
    Byte(LoadByteTarget, LoadByteSource),
    Word(LoadWordTarget),
    IndirectFromA(IndirectTarget),
    AFromIndirect(IndirectTarget),
    ByteAddressFromA,
    AFromByteAddress,
    IndirectFromSP,
    SPFromHL,
    HLFromSP,
}
#[derive(Debug)]
pub enum RSTLocation {
    X00,
    X08,
    X10,
    X18,
    X20,
    X28,
    X30,
    X38,
}

impl RSTLocation {
    pub fn to_hex(&self) -> u16 {
        match self {
            RSTLocation::X00 => 0x00,
            RSTLocation::X08 => 0x08,
            RSTLocation::X10 => 0x10,
            RSTLocation::X18 => 0x18,
            RSTLocation::X20 => 0x20,
            RSTLocation::X28 => 0x28,
            RSTLocation::X30 => 0x30,
            RSTLocation::X38 => 0x38,
        }
    }
}
#[derive(Debug)]
pub enum Instruction {
    // Arithmetic Operations
    ADC(ArithmeticTarget),
    ADD(ArithmeticTarget),
    AND(ArithmeticTarget),
    CP(ArithmeticTarget),
    OR(ArithmeticTarget),
    SBC(ArithmeticTarget),
    SUB(ArithmeticTarget),
    XOR(ArithmeticTarget),

    DEC(IncDecTarget),
    INC(IncDecTarget),

    ADDHL(ADDHLTarget),

    // Bit Operations
    BIT(PrefixTarget, BitPosition),
    RES(PrefixTarget, BitPosition),
    SET(PrefixTarget, BitPosition),
    SWAP(PrefixTarget),

    // Bit Shift Operations
    RL(PrefixTarget),
    RLA,
    RLC(PrefixTarget),
    RLCA,
    RR(PrefixTarget),
    RRA,
    RRC(PrefixTarget),
    RRCA,
    SLA(PrefixTarget),
    SRA(PrefixTarget),
    SRL(PrefixTarget),

    // Load Operations
    LD(LoadType),

    // Jumps and Subroutines
    JP(JumpCondition),
    JPHL,
    JR(JumpCondition),
    CALL(JumpCondition),
    RET(JumpCondition),
    RETI,
    RST(RSTLocation),

    // Stack Operations
    ADDSP,
    POP(StackTarget),
    PUSH(StackTarget),

    // Misc Operations
    CCF,
    CPL,
    DAA,
    DI,
    EI,
    HALT,
    NOP,
    SCF,
    // STOP,
}

impl Instruction {
    pub fn get_instruction(byte: u8, prefixed: bool) -> Instruction {
        if prefixed {
            Instruction::from_byte_prefixed(byte)
        } else {
            Instruction::from_byte(byte)
        }
    }

    fn from_byte_prefixed(byte: u8) -> Instruction {
        match byte {
            0x00 => Instruction::RLC(PrefixTarget::B),
            0x01 => Instruction::RLC(PrefixTarget::C),
            0x02 => Instruction::RLC(PrefixTarget::D),
            0x03 => Instruction::RLC(PrefixTarget::E),
            0x04 => Instruction::RLC(PrefixTarget::H),
            0x05 => Instruction::RLC(PrefixTarget::L),
            0x06 => Instruction::RLC(PrefixTarget::HL),
            0x07 => Instruction::RLC(PrefixTarget::A),
            0x08 => Instruction::RRC(PrefixTarget::B),
            0x09 => Instruction::RRC(PrefixTarget::C),
            0x0A => Instruction::RRC(PrefixTarget::D),
            0x0B => Instruction::RRC(PrefixTarget::E),
            0x0C => Instruction::RRC(PrefixTarget::H),
            0x0D => Instruction::RRC(PrefixTarget::L),
            0x0E => Instruction::RRC(PrefixTarget::HL),
            0x0F => Instruction::RRC(PrefixTarget::A),
            0x10 => Instruction::RL(PrefixTarget::B),
            0x11 => Instruction::RL(PrefixTarget::C),
            0x12 => Instruction::RL(PrefixTarget::D),
            0x13 => Instruction::RL(PrefixTarget::E),
            0x14 => Instruction::RL(PrefixTarget::H),
            0x15 => Instruction::RL(PrefixTarget::L),
            0x16 => Instruction::RL(PrefixTarget::HL),
            0x17 => Instruction::RL(PrefixTarget::A),
            0x18 => Instruction::RR(PrefixTarget::B),
            0x19 => Instruction::RR(PrefixTarget::C),
            0x1A => Instruction::RR(PrefixTarget::D),
            0x1B => Instruction::RR(PrefixTarget::E),
            0x1C => Instruction::RR(PrefixTarget::H),
            0x1D => Instruction::RR(PrefixTarget::L),
            0x1E => Instruction::RR(PrefixTarget::HL),
            0x1F => Instruction::RR(PrefixTarget::A),
            0x20 => Instruction::SLA(PrefixTarget::B),
            0x21 => Instruction::SLA(PrefixTarget::C),
            0x22 => Instruction::SLA(PrefixTarget::D),
            0x23 => Instruction::SLA(PrefixTarget::E),
            0x24 => Instruction::SLA(PrefixTarget::H),
            0x25 => Instruction::SLA(PrefixTarget::L),
            0x26 => Instruction::SLA(PrefixTarget::HL),
            0x27 => Instruction::SLA(PrefixTarget::A),
            0x28 => Instruction::SRA(PrefixTarget::B),
            0x29 => Instruction::SRA(PrefixTarget::C),
            0x2A => Instruction::SRA(PrefixTarget::D),
            0x2B => Instruction::SRA(PrefixTarget::E),
            0x2C => Instruction::SRA(PrefixTarget::H),
            0x2D => Instruction::SRA(PrefixTarget::L),
            0x2E => Instruction::SRA(PrefixTarget::HL),
            0x2F => Instruction::SRA(PrefixTarget::A),
            0x30 => Instruction::SWAP(PrefixTarget::B),
            0x31 => Instruction::SWAP(PrefixTarget::C),
            0x32 => Instruction::SWAP(PrefixTarget::D),
            0x33 => Instruction::SWAP(PrefixTarget::E),
            0x34 => Instruction::SWAP(PrefixTarget::H),
            0x35 => Instruction::SWAP(PrefixTarget::L),
            0x36 => Instruction::SWAP(PrefixTarget::HL),
            0x37 => Instruction::SWAP(PrefixTarget::A),
            0x38 => Instruction::SRL(PrefixTarget::B),
            0x39 => Instruction::SRL(PrefixTarget::C),
            0x3A => Instruction::SRL(PrefixTarget::D),
            0x3B => Instruction::SRL(PrefixTarget::E),
            0x3C => Instruction::SRL(PrefixTarget::H),
            0x3D => Instruction::SRL(PrefixTarget::L),
            0x3E => Instruction::SRL(PrefixTarget::HL),
            0x3F => Instruction::SRL(PrefixTarget::A),
            0x40 => Instruction::BIT(PrefixTarget::B, BitPosition::B0),
            0x41 => Instruction::BIT(PrefixTarget::C, BitPosition::B0),
            0x42 => Instruction::BIT(PrefixTarget::D, BitPosition::B0),
            0x43 => Instruction::BIT(PrefixTarget::E, BitPosition::B0),
            0x44 => Instruction::BIT(PrefixTarget::H, BitPosition::B0),
            0x45 => Instruction::BIT(PrefixTarget::L, BitPosition::B0),
            0x46 => Instruction::BIT(PrefixTarget::HL, BitPosition::B0),
            0x47 => Instruction::BIT(PrefixTarget::A, BitPosition::B0),
            0x48 => Instruction::BIT(PrefixTarget::B, BitPosition::B1),
            0x49 => Instruction::BIT(PrefixTarget::C, BitPosition::B1),
            0x4A => Instruction::BIT(PrefixTarget::D, BitPosition::B1),
            0x4B => Instruction::BIT(PrefixTarget::E, BitPosition::B1),
            0x4C => Instruction::BIT(PrefixTarget::H, BitPosition::B1),
            0x4D => Instruction::BIT(PrefixTarget::L, BitPosition::B1),
            0x4E => Instruction::BIT(PrefixTarget::HL, BitPosition::B1),
            0x4F => Instruction::BIT(PrefixTarget::A, BitPosition::B1),
            0x50 => Instruction::BIT(PrefixTarget::B, BitPosition::B2),
            0x51 => Instruction::BIT(PrefixTarget::C, BitPosition::B2),
            0x52 => Instruction::BIT(PrefixTarget::D, BitPosition::B2),
            0x53 => Instruction::BIT(PrefixTarget::E, BitPosition::B2),
            0x54 => Instruction::BIT(PrefixTarget::H, BitPosition::B2),
            0x55 => Instruction::BIT(PrefixTarget::L, BitPosition::B2),
            0x56 => Instruction::BIT(PrefixTarget::HL, BitPosition::B2),
            0x57 => Instruction::BIT(PrefixTarget::A, BitPosition::B2),
            0x58 => Instruction::BIT(PrefixTarget::B, BitPosition::B3),
            0x59 => Instruction::BIT(PrefixTarget::C, BitPosition::B3),
            0x5A => Instruction::BIT(PrefixTarget::D, BitPosition::B3),
            0x5B => Instruction::BIT(PrefixTarget::E, BitPosition::B3),
            0x5C => Instruction::BIT(PrefixTarget::H, BitPosition::B3),
            0x5D => Instruction::BIT(PrefixTarget::L, BitPosition::B3),
            0x5E => Instruction::BIT(PrefixTarget::HL, BitPosition::B3),
            0x5F => Instruction::BIT(PrefixTarget::A, BitPosition::B3),
            0x60 => Instruction::BIT(PrefixTarget::B, BitPosition::B4),
            0x61 => Instruction::BIT(PrefixTarget::C, BitPosition::B4),
            0x62 => Instruction::BIT(PrefixTarget::D, BitPosition::B4),
            0x63 => Instruction::BIT(PrefixTarget::E, BitPosition::B4),
            0x64 => Instruction::BIT(PrefixTarget::H, BitPosition::B4),
            0x65 => Instruction::BIT(PrefixTarget::L, BitPosition::B4),
            0x66 => Instruction::BIT(PrefixTarget::HL, BitPosition::B4),
            0x67 => Instruction::BIT(PrefixTarget::A, BitPosition::B4),
            0x68 => Instruction::BIT(PrefixTarget::B, BitPosition::B5),
            0x69 => Instruction::BIT(PrefixTarget::C, BitPosition::B5),
            0x6A => Instruction::BIT(PrefixTarget::D, BitPosition::B5),
            0x6B => Instruction::BIT(PrefixTarget::E, BitPosition::B5),
            0x6C => Instruction::BIT(PrefixTarget::H, BitPosition::B5),
            0x6D => Instruction::BIT(PrefixTarget::L, BitPosition::B5),
            0x6E => Instruction::BIT(PrefixTarget::HL, BitPosition::B5),
            0x6F => Instruction::BIT(PrefixTarget::A, BitPosition::B5),
            0x70 => Instruction::BIT(PrefixTarget::B, BitPosition::B6),
            0x71 => Instruction::BIT(PrefixTarget::C, BitPosition::B6),
            0x72 => Instruction::BIT(PrefixTarget::D, BitPosition::B6),
            0x73 => Instruction::BIT(PrefixTarget::E, BitPosition::B6),
            0x74 => Instruction::BIT(PrefixTarget::H, BitPosition::B6),
            0x75 => Instruction::BIT(PrefixTarget::L, BitPosition::B6),
            0x76 => Instruction::BIT(PrefixTarget::HL, BitPosition::B6),
            0x77 => Instruction::BIT(PrefixTarget::A, BitPosition::B6),
            0x78 => Instruction::BIT(PrefixTarget::B, BitPosition::B7),
            0x79 => Instruction::BIT(PrefixTarget::C, BitPosition::B7),
            0x7A => Instruction::BIT(PrefixTarget::D, BitPosition::B7),
            0x7B => Instruction::BIT(PrefixTarget::E, BitPosition::B7),
            0x7C => Instruction::BIT(PrefixTarget::H, BitPosition::B7),
            0x7D => Instruction::BIT(PrefixTarget::L, BitPosition::B7),
            0x7E => Instruction::BIT(PrefixTarget::HL, BitPosition::B7),
            0x7F => Instruction::BIT(PrefixTarget::A, BitPosition::B7),
            0x80 => Instruction::RES(PrefixTarget::B, BitPosition::B0),
            0x81 => Instruction::RES(PrefixTarget::C, BitPosition::B0),
            0x82 => Instruction::RES(PrefixTarget::D, BitPosition::B0),
            0x83 => Instruction::RES(PrefixTarget::E, BitPosition::B0),
            0x84 => Instruction::RES(PrefixTarget::H, BitPosition::B0),
            0x85 => Instruction::RES(PrefixTarget::L, BitPosition::B0),
            0x86 => Instruction::RES(PrefixTarget::HL, BitPosition::B0),
            0x87 => Instruction::RES(PrefixTarget::A, BitPosition::B0),
            0x88 => Instruction::RES(PrefixTarget::B, BitPosition::B1),
            0x89 => Instruction::RES(PrefixTarget::C, BitPosition::B1),
            0x8A => Instruction::RES(PrefixTarget::D, BitPosition::B1),
            0x8B => Instruction::RES(PrefixTarget::E, BitPosition::B1),
            0x8C => Instruction::RES(PrefixTarget::H, BitPosition::B1),
            0x8D => Instruction::RES(PrefixTarget::L, BitPosition::B1),
            0x8E => Instruction::RES(PrefixTarget::HL, BitPosition::B1),
            0x8F => Instruction::RES(PrefixTarget::A, BitPosition::B1),
            0x90 => Instruction::RES(PrefixTarget::B, BitPosition::B2),
            0x91 => Instruction::RES(PrefixTarget::C, BitPosition::B2),
            0x92 => Instruction::RES(PrefixTarget::D, BitPosition::B2),
            0x93 => Instruction::RES(PrefixTarget::E, BitPosition::B2),
            0x94 => Instruction::RES(PrefixTarget::H, BitPosition::B2),
            0x95 => Instruction::RES(PrefixTarget::L, BitPosition::B2),
            0x96 => Instruction::RES(PrefixTarget::HL, BitPosition::B2),
            0x97 => Instruction::RES(PrefixTarget::A, BitPosition::B2),
            0x98 => Instruction::RES(PrefixTarget::B, BitPosition::B3),
            0x99 => Instruction::RES(PrefixTarget::C, BitPosition::B3),
            0x9A => Instruction::RES(PrefixTarget::D, BitPosition::B3),
            0x9B => Instruction::RES(PrefixTarget::E, BitPosition::B3),
            0x9C => Instruction::RES(PrefixTarget::H, BitPosition::B3),
            0x9D => Instruction::RES(PrefixTarget::L, BitPosition::B3),
            0x9E => Instruction::RES(PrefixTarget::HL, BitPosition::B3),
            0x9F => Instruction::RES(PrefixTarget::A, BitPosition::B3),
            0xA0 => Instruction::RES(PrefixTarget::B, BitPosition::B4),
            0xA1 => Instruction::RES(PrefixTarget::C, BitPosition::B4),
            0xA2 => Instruction::RES(PrefixTarget::D, BitPosition::B4),
            0xA3 => Instruction::RES(PrefixTarget::E, BitPosition::B4),
            0xA4 => Instruction::RES(PrefixTarget::H, BitPosition::B4),
            0xA5 => Instruction::RES(PrefixTarget::L, BitPosition::B4),
            0xA6 => Instruction::RES(PrefixTarget::HL, BitPosition::B4),
            0xA7 => Instruction::RES(PrefixTarget::A, BitPosition::B4),
            0xA8 => Instruction::RES(PrefixTarget::B, BitPosition::B5),
            0xA9 => Instruction::RES(PrefixTarget::C, BitPosition::B5),
            0xAA => Instruction::RES(PrefixTarget::D, BitPosition::B5),
            0xAB => Instruction::RES(PrefixTarget::E, BitPosition::B5),
            0xAC => Instruction::RES(PrefixTarget::H, BitPosition::B5),
            0xAD => Instruction::RES(PrefixTarget::L, BitPosition::B5),
            0xAE => Instruction::RES(PrefixTarget::HL, BitPosition::B5),
            0xAF => Instruction::RES(PrefixTarget::A, BitPosition::B5),
            0xB0 => Instruction::RES(PrefixTarget::B, BitPosition::B6),
            0xB1 => Instruction::RES(PrefixTarget::C, BitPosition::B6),
            0xB2 => Instruction::RES(PrefixTarget::D, BitPosition::B6),
            0xB3 => Instruction::RES(PrefixTarget::E, BitPosition::B6),
            0xB4 => Instruction::RES(PrefixTarget::H, BitPosition::B6),
            0xB5 => Instruction::RES(PrefixTarget::L, BitPosition::B6),
            0xB6 => Instruction::RES(PrefixTarget::HL, BitPosition::B6),
            0xB7 => Instruction::RES(PrefixTarget::A, BitPosition::B6),
            0xB8 => Instruction::RES(PrefixTarget::B, BitPosition::B7),
            0xB9 => Instruction::RES(PrefixTarget::C, BitPosition::B7),
            0xBA => Instruction::RES(PrefixTarget::D, BitPosition::B7),
            0xBB => Instruction::RES(PrefixTarget::E, BitPosition::B7),
            0xBC => Instruction::RES(PrefixTarget::H, BitPosition::B7),
            0xBD => Instruction::RES(PrefixTarget::L, BitPosition::B7),
            0xBE => Instruction::RES(PrefixTarget::HL, BitPosition::B7),
            0xBF => Instruction::RES(PrefixTarget::A, BitPosition::B7),
            0xC0 => Instruction::SET(PrefixTarget::B, BitPosition::B0),
            0xC1 => Instruction::SET(PrefixTarget::C, BitPosition::B0),
            0xC2 => Instruction::SET(PrefixTarget::D, BitPosition::B0),
            0xC3 => Instruction::SET(PrefixTarget::E, BitPosition::B0),
            0xC4 => Instruction::SET(PrefixTarget::H, BitPosition::B0),
            0xC5 => Instruction::SET(PrefixTarget::L, BitPosition::B0),
            0xC6 => Instruction::SET(PrefixTarget::HL, BitPosition::B0),
            0xC7 => Instruction::SET(PrefixTarget::A, BitPosition::B0),
            0xC8 => Instruction::SET(PrefixTarget::B, BitPosition::B1),
            0xC9 => Instruction::SET(PrefixTarget::C, BitPosition::B1),
            0xCA => Instruction::SET(PrefixTarget::D, BitPosition::B1),
            0xCB => Instruction::SET(PrefixTarget::E, BitPosition::B1),
            0xCC => Instruction::SET(PrefixTarget::H, BitPosition::B1),
            0xCD => Instruction::SET(PrefixTarget::L, BitPosition::B1),
            0xCE => Instruction::SET(PrefixTarget::HL, BitPosition::B1),
            0xCF => Instruction::SET(PrefixTarget::A, BitPosition::B1),
            0xD0 => Instruction::SET(PrefixTarget::B, BitPosition::B2),
            0xD1 => Instruction::SET(PrefixTarget::C, BitPosition::B2),
            0xD2 => Instruction::SET(PrefixTarget::D, BitPosition::B2),
            0xD3 => Instruction::SET(PrefixTarget::E, BitPosition::B2),
            0xD4 => Instruction::SET(PrefixTarget::H, BitPosition::B2),
            0xD5 => Instruction::SET(PrefixTarget::L, BitPosition::B2),
            0xD6 => Instruction::SET(PrefixTarget::HL, BitPosition::B2),
            0xD7 => Instruction::SET(PrefixTarget::A, BitPosition::B2),
            0xD8 => Instruction::SET(PrefixTarget::B, BitPosition::B3),
            0xD9 => Instruction::SET(PrefixTarget::C, BitPosition::B3),
            0xDA => Instruction::SET(PrefixTarget::D, BitPosition::B3),
            0xDB => Instruction::SET(PrefixTarget::E, BitPosition::B3),
            0xDC => Instruction::SET(PrefixTarget::H, BitPosition::B3),
            0xDD => Instruction::SET(PrefixTarget::L, BitPosition::B3),
            0xDE => Instruction::SET(PrefixTarget::HL, BitPosition::B3),
            0xDF => Instruction::SET(PrefixTarget::A, BitPosition::B3),
            0xE0 => Instruction::SET(PrefixTarget::B, BitPosition::B4),
            0xE1 => Instruction::SET(PrefixTarget::C, BitPosition::B4),
            0xE2 => Instruction::SET(PrefixTarget::D, BitPosition::B4),
            0xE3 => Instruction::SET(PrefixTarget::E, BitPosition::B4),
            0xE4 => Instruction::SET(PrefixTarget::H, BitPosition::B4),
            0xE5 => Instruction::SET(PrefixTarget::L, BitPosition::B4),
            0xE6 => Instruction::SET(PrefixTarget::HL, BitPosition::B4),
            0xE7 => Instruction::SET(PrefixTarget::A, BitPosition::B4),
            0xE8 => Instruction::SET(PrefixTarget::B, BitPosition::B5),
            0xE9 => Instruction::SET(PrefixTarget::C, BitPosition::B5),
            0xEA => Instruction::SET(PrefixTarget::D, BitPosition::B5),
            0xEB => Instruction::SET(PrefixTarget::E, BitPosition::B5),
            0xEC => Instruction::SET(PrefixTarget::H, BitPosition::B5),
            0xED => Instruction::SET(PrefixTarget::L, BitPosition::B5),
            0xEE => Instruction::SET(PrefixTarget::HL, BitPosition::B5),
            0xEF => Instruction::SET(PrefixTarget::A, BitPosition::B5),
            0xF0 => Instruction::SET(PrefixTarget::B, BitPosition::B6),
            0xF1 => Instruction::SET(PrefixTarget::C, BitPosition::B6),
            0xF2 => Instruction::SET(PrefixTarget::D, BitPosition::B6),
            0xF3 => Instruction::SET(PrefixTarget::E, BitPosition::B6),
            0xF4 => Instruction::SET(PrefixTarget::H, BitPosition::B6),
            0xF5 => Instruction::SET(PrefixTarget::L, BitPosition::B6),
            0xF6 => Instruction::SET(PrefixTarget::HL, BitPosition::B6),
            0xF7 => Instruction::SET(PrefixTarget::A, BitPosition::B6),
            0xF8 => Instruction::SET(PrefixTarget::B, BitPosition::B7),
            0xF9 => Instruction::SET(PrefixTarget::C, BitPosition::B7),
            0xFA => Instruction::SET(PrefixTarget::D, BitPosition::B7),
            0xFB => Instruction::SET(PrefixTarget::E, BitPosition::B7),
            0xFC => Instruction::SET(PrefixTarget::H, BitPosition::B7),
            0xFD => Instruction::SET(PrefixTarget::L, BitPosition::B7),
            0xFE => Instruction::SET(PrefixTarget::HL, BitPosition::B7),
            0xFF => Instruction::SET(PrefixTarget::A, BitPosition::B7),
        }
    }

    fn from_byte(byte: u8) -> Instruction {
        match byte {
            0x00 => Instruction::NOP,
            0x01 => Instruction::LD(LoadType::Word(LoadWordTarget::BC)),
            0x02 => Instruction::LD(LoadType::IndirectFromA(IndirectTarget::BC)),
            0x03 => Instruction::INC(IncDecTarget::BC),
            0x04 => Instruction::INC(IncDecTarget::B),
            0x05 => Instruction::DEC(IncDecTarget::B),
            0x06 => Instruction::LD(LoadType::Byte(LoadByteTarget::B, LoadByteSource::D8)),
            0x07 => Instruction::RLCA,
            0x08 => Instruction::LD(LoadType::IndirectFromSP),
            0x09 => Instruction::ADDHL(ADDHLTarget::BC),
            0x0A => Instruction::LD(LoadType::AFromIndirect(IndirectTarget::BC)),
            0x0B => Instruction::DEC(IncDecTarget::BC),
            0x0C => Instruction::INC(IncDecTarget::C),
            0x0D => Instruction::DEC(IncDecTarget::C),
            0x0E => Instruction::LD(LoadType::Byte(LoadByteTarget::C, LoadByteSource::D8)),
            0x0F => Instruction::RRCA,
            // 0x10 => Instruction::STOP,
            0x11 => Instruction::LD(LoadType::Word(LoadWordTarget::DE)),
            0x12 => Instruction::LD(LoadType::IndirectFromA(IndirectTarget::DE)),
            0x13 => Instruction::INC(IncDecTarget::DE),
            0x14 => Instruction::INC(IncDecTarget::D),
            0x15 => Instruction::DEC(IncDecTarget::D),
            0x16 => Instruction::LD(LoadType::Byte(LoadByteTarget::D, LoadByteSource::D8)),
            0x17 => Instruction::RLA,
            0x18 => Instruction::JR(JumpCondition::Always),
            0x19 => Instruction::ADDHL(ADDHLTarget::DE),
            0x1A => Instruction::LD(LoadType::AFromIndirect(IndirectTarget::DE)),
            0x1B => Instruction::DEC(IncDecTarget::DE),
            0x1C => Instruction::INC(IncDecTarget::E),
            0x1D => Instruction::DEC(IncDecTarget::E),
            0x1E => Instruction::LD(LoadType::Byte(LoadByteTarget::E, LoadByteSource::D8)),
            0x1F => Instruction::RRA,
            0x20 => Instruction::JR(JumpCondition::NotZero),
            0x21 => Instruction::LD(LoadType::Word(LoadWordTarget::HL)),
            0x22 => Instruction::LD(LoadType::IndirectFromA(IndirectTarget::HLI)),
            0x23 => Instruction::INC(IncDecTarget::HL),
            0x24 => Instruction::INC(IncDecTarget::H),
            0x25 => Instruction::DEC(IncDecTarget::H),
            0x26 => Instruction::LD(LoadType::Byte(LoadByteTarget::H, LoadByteSource::D8)),
            0x27 => Instruction::DAA,
            0x28 => Instruction::JR(JumpCondition::Zero),
            0x29 => Instruction::ADDHL(ADDHLTarget::HL),
            0x2A => Instruction::LD(LoadType::AFromIndirect(IndirectTarget::HLI)),
            0x2B => Instruction::DEC(IncDecTarget::HL),
            0x2C => Instruction::INC(IncDecTarget::L),
            0x2D => Instruction::DEC(IncDecTarget::L),
            0x2E => Instruction::LD(LoadType::Byte(LoadByteTarget::L, LoadByteSource::D8)),
            0x2F => Instruction::CPL,
            0x30 => Instruction::JR(JumpCondition::NotCarry),
            0x31 => Instruction::LD(LoadType::Word(LoadWordTarget::SP)),
            0x32 => Instruction::LD(LoadType::IndirectFromA(IndirectTarget::HLD)),
            0x33 => Instruction::INC(IncDecTarget::SP),
            0x34 => Instruction::INC(IncDecTarget::HLI),
            0x35 => Instruction::DEC(IncDecTarget::HLI),
            0x36 => Instruction::LD(LoadType::Byte(LoadByteTarget::HL, LoadByteSource::D8)),
            0x37 => Instruction::SCF,
            0x38 => Instruction::JR(JumpCondition::Carry),
            0x39 => Instruction::ADDHL(ADDHLTarget::SP),
            0x3A => Instruction::LD(LoadType::AFromIndirect(IndirectTarget::HLD)),
            0x3B => Instruction::DEC(IncDecTarget::SP),
            0x3C => Instruction::INC(IncDecTarget::A),
            0x3D => Instruction::DEC(IncDecTarget::A),
            0x3E => Instruction::LD(LoadType::Byte(LoadByteTarget::A, LoadByteSource::D8)),
            0x3F => Instruction::CCF,
            0x40 => Instruction::LD(LoadType::Byte(LoadByteTarget::B, LoadByteSource::B)),
            0x41 => Instruction::LD(LoadType::Byte(LoadByteTarget::B, LoadByteSource::C)),
            0x42 => Instruction::LD(LoadType::Byte(LoadByteTarget::B, LoadByteSource::D)),
            0x43 => Instruction::LD(LoadType::Byte(LoadByteTarget::B, LoadByteSource::E)),
            0x44 => Instruction::LD(LoadType::Byte(LoadByteTarget::B, LoadByteSource::H)),
            0x45 => Instruction::LD(LoadType::Byte(LoadByteTarget::B, LoadByteSource::L)),
            0x46 => Instruction::LD(LoadType::Byte(LoadByteTarget::B, LoadByteSource::HL)),
            0x47 => Instruction::LD(LoadType::Byte(LoadByteTarget::B, LoadByteSource::A)),
            0x48 => Instruction::LD(LoadType::Byte(LoadByteTarget::C, LoadByteSource::B)),
            0x49 => Instruction::LD(LoadType::Byte(LoadByteTarget::C, LoadByteSource::C)),
            0x4A => Instruction::LD(LoadType::Byte(LoadByteTarget::C, LoadByteSource::D)),
            0x4B => Instruction::LD(LoadType::Byte(LoadByteTarget::C, LoadByteSource::E)),
            0x4C => Instruction::LD(LoadType::Byte(LoadByteTarget::C, LoadByteSource::H)),
            0x4D => Instruction::LD(LoadType::Byte(LoadByteTarget::C, LoadByteSource::L)),
            0x4E => Instruction::LD(LoadType::Byte(LoadByteTarget::C, LoadByteSource::HL)),
            0x4F => Instruction::LD(LoadType::Byte(LoadByteTarget::C, LoadByteSource::A)),
            0x50 => Instruction::LD(LoadType::Byte(LoadByteTarget::D, LoadByteSource::B)),
            0x51 => Instruction::LD(LoadType::Byte(LoadByteTarget::D, LoadByteSource::C)),
            0x52 => Instruction::LD(LoadType::Byte(LoadByteTarget::D, LoadByteSource::D)),
            0x53 => Instruction::LD(LoadType::Byte(LoadByteTarget::D, LoadByteSource::E)),
            0x54 => Instruction::LD(LoadType::Byte(LoadByteTarget::D, LoadByteSource::H)),
            0x55 => Instruction::LD(LoadType::Byte(LoadByteTarget::D, LoadByteSource::L)),
            0x56 => Instruction::LD(LoadType::Byte(LoadByteTarget::D, LoadByteSource::HL)),
            0x57 => Instruction::LD(LoadType::Byte(LoadByteTarget::D, LoadByteSource::A)),
            0x58 => Instruction::LD(LoadType::Byte(LoadByteTarget::E, LoadByteSource::B)),
            0x59 => Instruction::LD(LoadType::Byte(LoadByteTarget::E, LoadByteSource::C)),
            0x5A => Instruction::LD(LoadType::Byte(LoadByteTarget::E, LoadByteSource::D)),
            0x5B => Instruction::LD(LoadType::Byte(LoadByteTarget::E, LoadByteSource::E)),
            0x5C => Instruction::LD(LoadType::Byte(LoadByteTarget::E, LoadByteSource::H)),
            0x5D => Instruction::LD(LoadType::Byte(LoadByteTarget::E, LoadByteSource::L)),
            0x5E => Instruction::LD(LoadType::Byte(LoadByteTarget::E, LoadByteSource::HL)),
            0x5F => Instruction::LD(LoadType::Byte(LoadByteTarget::E, LoadByteSource::A)),
            0x60 => Instruction::LD(LoadType::Byte(LoadByteTarget::H, LoadByteSource::B)),
            0x61 => Instruction::LD(LoadType::Byte(LoadByteTarget::H, LoadByteSource::C)),
            0x62 => Instruction::LD(LoadType::Byte(LoadByteTarget::H, LoadByteSource::D)),
            0x63 => Instruction::LD(LoadType::Byte(LoadByteTarget::H, LoadByteSource::E)),
            0x64 => Instruction::LD(LoadType::Byte(LoadByteTarget::H, LoadByteSource::H)),
            0x65 => Instruction::LD(LoadType::Byte(LoadByteTarget::H, LoadByteSource::L)),
            0x66 => Instruction::LD(LoadType::Byte(LoadByteTarget::H, LoadByteSource::HL)),
            0x67 => Instruction::LD(LoadType::Byte(LoadByteTarget::H, LoadByteSource::A)),
            0x68 => Instruction::LD(LoadType::Byte(LoadByteTarget::L, LoadByteSource::B)),
            0x69 => Instruction::LD(LoadType::Byte(LoadByteTarget::L, LoadByteSource::C)),
            0x6A => Instruction::LD(LoadType::Byte(LoadByteTarget::L, LoadByteSource::D)),
            0x6B => Instruction::LD(LoadType::Byte(LoadByteTarget::L, LoadByteSource::E)),
            0x6C => Instruction::LD(LoadType::Byte(LoadByteTarget::L, LoadByteSource::H)),
            0x6D => Instruction::LD(LoadType::Byte(LoadByteTarget::L, LoadByteSource::L)),
            0x6E => Instruction::LD(LoadType::Byte(LoadByteTarget::L, LoadByteSource::HL)),
            0x6F => Instruction::LD(LoadType::Byte(LoadByteTarget::L, LoadByteSource::A)),
            0x70 => Instruction::LD(LoadType::Byte(LoadByteTarget::HL, LoadByteSource::B)),
            0x71 => Instruction::LD(LoadType::Byte(LoadByteTarget::HL, LoadByteSource::C)),
            0x72 => Instruction::LD(LoadType::Byte(LoadByteTarget::HL, LoadByteSource::D)),
            0x73 => Instruction::LD(LoadType::Byte(LoadByteTarget::HL, LoadByteSource::E)),
            0x74 => Instruction::LD(LoadType::Byte(LoadByteTarget::HL, LoadByteSource::H)),
            0x75 => Instruction::LD(LoadType::Byte(LoadByteTarget::HL, LoadByteSource::L)),
            0x76 => Instruction::HALT,
            0x77 => Instruction::LD(LoadType::Byte(LoadByteTarget::HL, LoadByteSource::A)),
            0x78 => Instruction::LD(LoadType::Byte(LoadByteTarget::A, LoadByteSource::B)),
            0x79 => Instruction::LD(LoadType::Byte(LoadByteTarget::A, LoadByteSource::C)),
            0x7A => Instruction::LD(LoadType::Byte(LoadByteTarget::A, LoadByteSource::D)),
            0x7B => Instruction::LD(LoadType::Byte(LoadByteTarget::A, LoadByteSource::E)),
            0x7C => Instruction::LD(LoadType::Byte(LoadByteTarget::A, LoadByteSource::H)),
            0x7D => Instruction::LD(LoadType::Byte(LoadByteTarget::A, LoadByteSource::L)),
            0x7E => Instruction::LD(LoadType::Byte(LoadByteTarget::A, LoadByteSource::HL)),
            0x7F => Instruction::LD(LoadType::Byte(LoadByteTarget::A, LoadByteSource::A)),
            0x80 => Instruction::ADD(ArithmeticTarget::B),
            0x81 => Instruction::ADD(ArithmeticTarget::C),
            0x82 => Instruction::ADD(ArithmeticTarget::D),
            0x83 => Instruction::ADD(ArithmeticTarget::E),
            0x84 => Instruction::ADD(ArithmeticTarget::H),
            0x85 => Instruction::ADD(ArithmeticTarget::L),
            0x86 => Instruction::ADD(ArithmeticTarget::HL),
            0x87 => Instruction::ADD(ArithmeticTarget::A),
            0x88 => Instruction::ADC(ArithmeticTarget::B),
            0x89 => Instruction::ADC(ArithmeticTarget::C),
            0x8A => Instruction::ADC(ArithmeticTarget::D),
            0x8B => Instruction::ADC(ArithmeticTarget::E),
            0x8C => Instruction::ADC(ArithmeticTarget::H),
            0x8D => Instruction::ADC(ArithmeticTarget::L),
            0x8E => Instruction::ADC(ArithmeticTarget::HL),
            0x8F => Instruction::ADC(ArithmeticTarget::A),
            0x90 => Instruction::SUB(ArithmeticTarget::B),
            0x91 => Instruction::SUB(ArithmeticTarget::C),
            0x92 => Instruction::SUB(ArithmeticTarget::D),
            0x93 => Instruction::SUB(ArithmeticTarget::E),
            0x94 => Instruction::SUB(ArithmeticTarget::H),
            0x95 => Instruction::SUB(ArithmeticTarget::L),
            0x96 => Instruction::SUB(ArithmeticTarget::HL),
            0x97 => Instruction::SUB(ArithmeticTarget::A),
            0x98 => Instruction::SBC(ArithmeticTarget::B),
            0x99 => Instruction::SBC(ArithmeticTarget::C),
            0x9A => Instruction::SBC(ArithmeticTarget::D),
            0x9B => Instruction::SBC(ArithmeticTarget::E),
            0x9C => Instruction::SBC(ArithmeticTarget::H),
            0x9D => Instruction::SBC(ArithmeticTarget::L),
            0x9E => Instruction::SBC(ArithmeticTarget::HL),
            0x9F => Instruction::SBC(ArithmeticTarget::A),
            0xA0 => Instruction::AND(ArithmeticTarget::B),
            0xA1 => Instruction::AND(ArithmeticTarget::C),
            0xA2 => Instruction::AND(ArithmeticTarget::D),
            0xA3 => Instruction::AND(ArithmeticTarget::E),
            0xA4 => Instruction::AND(ArithmeticTarget::H),
            0xA5 => Instruction::AND(ArithmeticTarget::L),
            0xA6 => Instruction::AND(ArithmeticTarget::HL),
            0xA7 => Instruction::AND(ArithmeticTarget::A),
            0xA8 => Instruction::XOR(ArithmeticTarget::B),
            0xA9 => Instruction::XOR(ArithmeticTarget::C),
            0xAA => Instruction::XOR(ArithmeticTarget::D),
            0xAB => Instruction::XOR(ArithmeticTarget::E),
            0xAC => Instruction::XOR(ArithmeticTarget::H),
            0xAD => Instruction::XOR(ArithmeticTarget::L),
            0xAE => Instruction::XOR(ArithmeticTarget::HL),
            0xAF => Instruction::XOR(ArithmeticTarget::A),
            0xB0 => Instruction::OR(ArithmeticTarget::B),
            0xB1 => Instruction::OR(ArithmeticTarget::C),
            0xB2 => Instruction::OR(ArithmeticTarget::D),
            0xB3 => Instruction::OR(ArithmeticTarget::E),
            0xB4 => Instruction::OR(ArithmeticTarget::H),
            0xB5 => Instruction::OR(ArithmeticTarget::L),
            0xB6 => Instruction::OR(ArithmeticTarget::HL),
            0xB7 => Instruction::OR(ArithmeticTarget::A),
            0xB8 => Instruction::CP(ArithmeticTarget::B),
            0xB9 => Instruction::CP(ArithmeticTarget::C),
            0xBA => Instruction::CP(ArithmeticTarget::D),
            0xBB => Instruction::CP(ArithmeticTarget::E),
            0xBC => Instruction::CP(ArithmeticTarget::H),
            0xBD => Instruction::CP(ArithmeticTarget::L),
            0xBE => Instruction::CP(ArithmeticTarget::HL),
            0xBF => Instruction::CP(ArithmeticTarget::A),
            0xC0 => Instruction::RET(JumpCondition::NotZero),
            0xC1 => Instruction::POP(StackTarget::BC),
            0xC2 => Instruction::JP(JumpCondition::NotZero),
            0xC3 => Instruction::JP(JumpCondition::Always),
            0xC4 => Instruction::CALL(JumpCondition::NotZero),
            0xC5 => Instruction::PUSH(StackTarget::BC),
            0xC6 => Instruction::ADD(ArithmeticTarget::D8),
            0xC7 => Instruction::RST(RSTLocation::X00),
            0xC8 => Instruction::RET(JumpCondition::Zero),
            0xC9 => Instruction::RET(JumpCondition::Always),
            0xCA => Instruction::JP(JumpCondition::Zero),

            0xCC => Instruction::CALL(JumpCondition::Zero),
            0xCD => Instruction::CALL(JumpCondition::Always),
            0xCE => Instruction::ADC(ArithmeticTarget::D8),
            0xCF => Instruction::RST(RSTLocation::X08),
            0xD0 => Instruction::RET(JumpCondition::NotCarry),
            0xD1 => Instruction::POP(StackTarget::DE),
            0xD2 => Instruction::JP(JumpCondition::NotCarry),
            0xD4 => Instruction::CALL(JumpCondition::NotCarry),
            0xD5 => Instruction::PUSH(StackTarget::DE),
            0xD6 => Instruction::SUB(ArithmeticTarget::D8),
            0xD7 => Instruction::RST(RSTLocation::X10),
            0xD8 => Instruction::RET(JumpCondition::Carry),
            0xD9 => Instruction::RETI,
            0xDA => Instruction::JP(JumpCondition::Carry),
            0xDC => Instruction::CALL(JumpCondition::Carry),
            0xDE => Instruction::SBC(ArithmeticTarget::D8),
            0xDF => Instruction::RST(RSTLocation::X18),
            0xE0 => Instruction::LD(LoadType::ByteAddressFromA),
            0xE1 => Instruction::POP(StackTarget::HL),
            0xE2 => Instruction::LD(LoadType::IndirectFromA(IndirectTarget::LastByte)),
            0xE5 => Instruction::PUSH(StackTarget::HL),
            0xE6 => Instruction::AND(ArithmeticTarget::D8),
            0xE7 => Instruction::RST(RSTLocation::X20),
            0xE8 => Instruction::ADDSP,
            0xE9 => Instruction::JPHL,
            0xEA => Instruction::LD(LoadType::IndirectFromA(IndirectTarget::Word)),
            0xEE => Instruction::XOR(ArithmeticTarget::D8),
            0xEF => Instruction::RST(RSTLocation::X28),
            0xF0 => Instruction::LD(LoadType::AFromByteAddress),
            0xF1 => Instruction::POP(StackTarget::AF),
            0xF2 => Instruction::LD(LoadType::AFromIndirect(IndirectTarget::LastByte)),
            0xF3 => Instruction::DI,
            0xF5 => Instruction::PUSH(StackTarget::AF),
            0xF6 => Instruction::OR(ArithmeticTarget::D8),
            0xF7 => Instruction::RST(RSTLocation::X30),
            0xF8 => Instruction::LD(LoadType::HLFromSP),
            0xF9 => Instruction::LD(LoadType::SPFromHL),
            0xFA => Instruction::LD(LoadType::AFromIndirect(IndirectTarget::Word)),
            0xFB => Instruction::EI,
            0xFE => Instruction::CP(ArithmeticTarget::D8),
            0xFF => Instruction::RST(RSTLocation::X38),
            _ => Instruction::NOP,
        }
    }
}
